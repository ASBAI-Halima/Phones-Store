{"ast":null,"code":"import{createContext,useReducer,useEffect,useState}from'react';import ProductsReducer from'./ProductsReducer';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";const API_URL='http://localhost:3000/products';const API_URL_reviews='http://localhost:3000/reviews';const API_URL_cart='http://localhost:3000/cart';const initialState={products:[],reviews:[],productsAddedToCart:[],loading:true,error:null};export const ProductsContext=/*#__PURE__*/createContext(initialState);export const ProductsProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(ProductsReducer,initialState);const[products,setProducts]=useState([]);const[reviews,setReviews]=useState([]);const[productsAddedToCart,setProductsAddedToCart]=useState([]);useEffect(()=>{const fetchProducts=async()=>{try{const response=await fetch(API_URL);const data=await response.json();setProducts(data);dispatch({type:'FETCH_PRODUCTS',payload:products});const response_reviews=await fetch(API_URL_reviews);const data_reviews=await response_reviews.json();setReviews(data_reviews);dispatch({type:'FETCH_REVIEWS',payload:reviews});const response_cart=await fetch(API_URL_cart);const data_cart=await response_cart.json();setProductsAddedToCart(data_cart);}catch(error){dispatch({type:'SET_ERROR',payload:error.message});console.log('erreur: '+error);}};fetchProducts();});const addToCart=async productId=>{try{// get the product to add to cart\nconst product=products.find(p=>p.id===productId);// creat a new product to add to cart\nconst item={id:product.id,title:product.title,image:product.image,price:product.price,category:product.category,quantity:1};// Send a POST request to the server to add the item to the cart\nconst response=await fetch(API_URL_cart,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(item)});if(!response.ok){throw new Error('Failed to add item to cart');}// Add the item to the local state\nsetProductsAddedToCart([...productsAddedToCart,item]);}catch(error){console.log(error);}};const removeFromCart=async itemId=>{try{// Send a DELETE request to the server to remove the item from the cart\nconst response=await fetch(\"\".concat(API_URL_cart,\"/\").concat(itemId),{method:'DELETE'});if(!response.ok){throw new Error('Failed to remove item from cart');}// Update the local state by removing the item from the array\n}catch(error){console.log(error);}};const increaseQuantity=async itemId=>{try{// Send a PATCH request to the server to update the quantity of the item in the cart\nconst itemToUpdate=productsAddedToCart.find(item=>item.id===itemId);const updatedItem={...itemToUpdate,quantity:itemToUpdate.quantity+1};const response=await fetch(\"\".concat(API_URL_cart,\"/\").concat(itemId),{method:'PATCH',headers:{'Content-Type':'application/json'},body:JSON.stringify(updatedItem)});if(!response.ok){throw new Error('Failed to update item quantity in cart');}// Update the local state by finding the item in the array and replacing it with the updated item\nconst updatedCart=productsAddedToCart.map(item=>item.id===itemId?updatedItem:item);setProductsAddedToCart(updatedCart);}catch(error){console.log(error);}};const decreaseQuantity=async itemId=>{try{// Send a PATCH request to the server to update the quantity of the item in the cart\nconst itemToUpdate=productsAddedToCart.find(item=>item.id===itemId);if(itemToUpdate.quantity===1){// If the quantity is already 1, remove the item from the cart instead\nawait removeFromCart(itemId);return;}const updatedItem={...itemToUpdate,quantity:itemToUpdate.quantity-1};const response=await fetch(\"\".concat(API_URL_cart,\"/\").concat(itemId),{method:'PATCH',headers:{'Content-Type':'application/json'},body:JSON.stringify(updatedItem)});if(!response.ok){throw new Error('Failed to update product quantity in cart');}// Update the local state by finding the item in the array and replacing it with the updated item\nconst updatedCart=productsAddedToCart.map(item=>item.id===itemId?updatedItem:item);setProductsAddedToCart(updatedCart);}catch(error){console.log(error);}};const getProductById=async itemId=>{try{const response=await fetch(\"\".concat(API_URL,\"/\").concat(itemId));if(!response.ok){throw new Error('Failed to get product');}const product=await response.json();return product;}catch(error){console.log(error);}};if(!products)return/*#__PURE__*/_jsx(_Fragment,{});if(!reviews)return/*#__PURE__*/_jsx(_Fragment,{});return/*#__PURE__*/_jsx(ProductsContext.Provider,{value:{products:products,reviews:reviews,productsAddedToCart:productsAddedToCart,loading:state.loading,error:state.error,addToCart:addToCart,removeFromCart:removeFromCart,increaseQuantity,decreaseQuantity,getProductById:getProductById},children:children});};","map":{"version":3,"names":["createContext","useReducer","useEffect","useState","ProductsReducer","Fragment","_Fragment","jsx","_jsx","API_URL","API_URL_reviews","API_URL_cart","initialState","products","reviews","productsAddedToCart","loading","error","ProductsContext","ProductsProvider","_ref","children","state","dispatch","setProducts","setReviews","setProductsAddedToCart","fetchProducts","response","fetch","data","json","type","payload","response_reviews","data_reviews","response_cart","data_cart","message","console","log","addToCart","productId","product","find","p","id","item","title","image","price","category","quantity","method","headers","body","JSON","stringify","ok","Error","removeFromCart","itemId","concat","increaseQuantity","itemToUpdate","updatedItem","updatedCart","map","decreaseQuantity","getProductById","Provider","value"],"sources":["C:/Users/hasbai/Desktop/Personnel/project github/phones-store/src/context/ProductsContext.jsx"],"sourcesContent":["import {createContext , useReducer , useEffect, useState} from 'react';\nimport ProductsReducer from './ProductsReducer';\nconst API_URL = 'http://localhost:3000/products';\nconst API_URL_reviews = 'http://localhost:3000/reviews';\nconst API_URL_cart = 'http://localhost:3000/cart';\n\nconst initialState = {\n  products: [],\n  reviews: [],\n  productsAddedToCart:[],\n  loading: true ,\n  error: null\n}\nexport const ProductsContext = createContext(initialState);\n\nexport const ProductsProvider = ({ children}) =>{\n    const [state, dispatch] = useReducer(ProductsReducer, initialState);\n    const [products , setProducts] = useState([]);\n    const [reviews , setReviews] = useState([]);\n    const [productsAddedToCart , setProductsAddedToCart] = useState([]);\n\n    useEffect(()=>{\n        const fetchProducts = async ()=>{\n            try{\n                const response = await fetch(API_URL);\n                const data = await response.json();\n                setProducts(data);\n                dispatch({\n                  type: 'FETCH_PRODUCTS',\n                  payload: products,\n              });\n                const response_reviews = await fetch(API_URL_reviews);\n                const data_reviews = await response_reviews.json();\n                \n                setReviews(data_reviews);\n                \n                dispatch({\n                  type: 'FETCH_REVIEWS',\n                  payload: reviews,\n              });\n              const response_cart = await fetch(API_URL_cart);\n              const data_cart = await response_cart.json();\n              setProductsAddedToCart(data_cart)\n\n            }catch(error){\n                dispatch({\n                    type: 'SET_ERROR',\n                    payload: error.message,\n                  });\n                  console.log('erreur: '+error);\n            }\n        };\n        fetchProducts();\n      });\n        const addToCart  = async (productId)=>{\n          try {\n            // get the product to add to cart\n            const product = products.find((p)=> p.id === productId);\n            // creat a new product to add to cart\n            const item ={\n                id: product.id,\n                title: product.title,\n                image : product.image,\n              price: product.price,\n              category : product.category,\n              quantity: 1,\n            };\n            // Send a POST request to the server to add the item to the cart\n              const response = await fetch(API_URL_cart,{\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(item),\n              });\n              if (!response.ok) {\n                throw new Error('Failed to add item to cart');\n              }\n              // Add the item to the local state\n            setProductsAddedToCart([...productsAddedToCart, item]);\n            \n\n\n          } catch(error){\n            console.log(error);\n          }\n        };\n        const removeFromCart = async (itemId) => {\n          try {\n            // Send a DELETE request to the server to remove the item from the cart\n            const response = await fetch(`${API_URL_cart}/${itemId}`, {\n              method: 'DELETE',\n            });\n            if (!response.ok) {\n              throw new Error('Failed to remove item from cart');\n            }\n            // Update the local state by removing the item from the array\n          } catch (error) {\n            console.log(error);\n          }\n        };\n        const increaseQuantity = async (itemId) => {\n          try {\n            // Send a PATCH request to the server to update the quantity of the item in the cart\n            const itemToUpdate = productsAddedToCart.find((item) => item.id === itemId);\n            const updatedItem = {\n              ...itemToUpdate,\n              quantity: itemToUpdate.quantity + 1,\n            };\n            const response = await fetch(`${API_URL_cart}/${itemId}`, {\n              method: 'PATCH',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(updatedItem),\n            });\n            if (!response.ok) {\n              throw new Error('Failed to update item quantity in cart');\n            }\n            // Update the local state by finding the item in the array and replacing it with the updated item\n            const updatedCart = productsAddedToCart.map((item) =>\n              item.id === itemId ? updatedItem : item\n            );\n            setProductsAddedToCart(updatedCart);\n          } catch (error) {\n            console.log(error);\n          }\n        };\n        const decreaseQuantity = async (itemId) => {\n          try {\n            // Send a PATCH request to the server to update the quantity of the item in the cart\n            const itemToUpdate = productsAddedToCart.find((item) => item.id === itemId);\n            if (itemToUpdate.quantity === 1) {\n              // If the quantity is already 1, remove the item from the cart instead\n              await removeFromCart(itemId);\n              return;\n            }\n            const updatedItem = {\n              ...itemToUpdate,\n              quantity: itemToUpdate.quantity - 1,\n            };\n            const response = await fetch(`${API_URL_cart}/${itemId}`, {\n              method: 'PATCH',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(updatedItem),\n            });\n            if (!response.ok) {\n              throw new Error('Failed to update product quantity in cart');\n            }\n            // Update the local state by finding the item in the array and replacing it with the updated item\n            const updatedCart = productsAddedToCart.map((item) =>\n              item.id === itemId ? updatedItem : item\n            );\n            setProductsAddedToCart(updatedCart);\n          } catch (error) {\n            console.log(error);\n          }\n        };\n        const getProductById = async  (itemId)=>{\n          try {\n            const response = await fetch(`${API_URL}/${itemId}`);\n            if (!response.ok) {\n              throw new Error('Failed to get product');\n            }\n            const product = await response.json();\n            return product;\n          } catch (error) {\n            console.log(error);\n          }\n        }\n \n\n    if(!products) return <></>;\n    if(!reviews) return <></>;\n    \n    return (\n        <ProductsContext.Provider\n          value={{\n            products: products,\n            reviews : reviews,\n            productsAddedToCart:productsAddedToCart,\n            loading: state.loading,\n            error: state.error,\n            addToCart: addToCart,\n            removeFromCart: removeFromCart,\n            increaseQuantity,\n            decreaseQuantity,\n            getProductById:getProductById\n             \n             \n          }}\n        >\n          {children}\n        </ProductsContext.Provider>\n      );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}